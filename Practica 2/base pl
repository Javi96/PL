programa(): declaraciones separador instrucciones
declaraciones(): declaracion Rdeclaraciones
Rdecalraciones(): puntocoma declaracion Rdeclaraciones | {} 
decalracion(): identificador variable
identificador(): "num" | "bool"
variables(): -----
separador(): "&&"
instrucciones(): instruccion Rinstrucciones
Rinstrucciones(): puntocoma instruccion Rinstrucciones | {}




instruccion(): variable "=" E0
E0(): E0 op0 E1 | E1
E1(): E2 and E1 | E2 or E2 | E2
E2(): E3 op2 E3 | E3
E3(): E3 op3 E4 | E4
E4(): "-" E4 | not E5 | E5
E5(): "(" E0 ")" | variable | numeroreal

op0: + - binaros izqasoc
op1: and der_asoc or no_asoc 
op2:
op3:
op4:



PROGRAMA -> DECLARACIONES separador INSTRUCCIONES.
DECLARACIONES -> DECLARACION R_DECLARACIONES.
R_DECLARACIONES -> puntocoma DECLARACION R_DECLARACIONES
	| .
DECLARACION -> iden var.
INSTRUCCIONES -> INSTRUCCION R_INSTRUCCIONES.
R_INSTRUCCIONES -> puntocoma INSTRUCCION R_INSTRUCCIONES
	| .
INSTRUCCION -> var igual E0.
E0 -> E0 op0 E1
	| E1.
E1 -> E2 and E1
	| E2 or E2
	| E2.
E2 -> E3 op2 E3
	| E3.
E3 -> E3 op3 E4
	| E4.
E4 -> menos E4
	| not E5
	| E5.
E5 -> pap E0 pac
	| var
	| numreal
	| . 

http://smlweb.cpsc.ucalgary.ca/start.html


----------------------------------------------------------------------------------------------
ELIMINANDO RECURSION A IZQUIERDAS
----------------------------------------------------------------------------------------------
REMOVE LEFT RECURSION STEP (aun no ll1)

PROGRAMA ->	DECLARACIONES separador INSTRUCCIONES .
DECLARACIONES ->	DECLARACION R_DECLARACIONES .
R_DECLARACIONES ->	puntocoma DECLARACION R_DECLARACIONES
|	.
DECLARACION ->	iden var .
INSTRUCCIONES ->	INSTRUCCION R_INSTRUCCIONES .
R_INSTRUCCIONES ->	puntocoma INSTRUCCION R_INSTRUCCIONES
|	.
INSTRUCCION ->	var igual E0 .
E0 ->	E1 E01 .
E01 ->	op0 E1 E01
|	.
E1 ->	E2 and E1
|	E2 or E2
|	E2 .
E2 ->	E3 op2 E3
|	E3 .
E3 ->	E4 E31 .
E31 ->	op3 E4 E31
|	.
E4 ->	menos E4
|	not E5
|	E5 .
E5 ->	pap E0 pac
|	var
|	numreal
|	.

LEFT FACTOR STEP (ya si ll1)

PROGRAMA ->	DECLARACIONES separador INSTRUCCIONES .
DECLARACIONES ->	DECLARACION R_DECLARACIONES .
R_DECLARACIONES ->	puntocoma DECLARACION R_DECLARACIONES
|	.
DECLARACION ->	iden var .
INSTRUCCIONES ->	INSTRUCCION R_INSTRUCCIONES .
R_INSTRUCCIONES ->	puntocoma INSTRUCCION R_INSTRUCCIONES
|	.
INSTRUCCION ->	var igual E0 .
E0 ->	E1 E01 .
E01 ->	op0 E1 E01
|	.
E1 ->	E2 FE2 .
FE2 ->	and E1
|	or E2
|	.
E2 ->	E3 FE3 .
FE3 ->	op2 E3
|	.
E3 ->	E4 E31 .
E31 ->	op3 E4 E31
|	.
E4 ->	menos E4
|	not E5
|	E5 .
E5 ->	pap E0 pac
|	var
|	numreal
|	.

----------------------------------------------------------------------------------------------
DIRECTORES (los primeros de cada termino)
----------------------------------------------------------------------------------------------
gramatica//directores

PROGRAMA ->	DECLARACIONES separador INSTRUCCIONES. 			:{iden}
DECLARACIONES ->	DECLARACION R_DECLARACIONES . 			:{iden}
R_DECLARACIONES ->	puntocoma DECLARACION R_DECLARACIONES. 	:{puntocoma}
R_DECLARACIONES ->	. 										:{separador}
DECLARACION ->	iden var . 									:{iden}
INSTRUCCIONES ->	INSTRUCCION R_INSTRUCCIONES . 			:{var}
R_INSTRUCCIONES ->	puntocoma INSTRUCCION R_INSTRUCCIONES. 	:{puntocoma}
R_INSTRUCCIONES ->	. 										:{eof}
INSTRUCCION ->	var igual E0 . 								:{var}

E0 ->	E1 E01. 		:{and,or,op2,-,not,op3,pap,var,numreal,op0,pac,puntocoma}
E01 ->	op0 E1 E01.		:{op0}
E01 ->  . 				:{pac,puntocoma}
E1 ->	E2 FE2. 		:{op2,menos,not,op3,pap,var,numreal,and,or,pac,op0,puntocoma}
FE2 ->	and E1. 		:{and}
FE2 ->  or E2.  		:{or}
FE2 ->  . 				:{pac,op0,puntocoma}
E2 ->	E3 FE3.			:{menos,not,op3,pap,var,numreal,op2,pac,and,or,op0,puntocoma}
FE3 ->	op2 E3.		    :{op2}
FE3 ->  .				:{pac,and,or,op0,puntocoma}
E3 ->	E4 E31 .		:{menos,not,pap,var,numreal,op3,pac,op2,and,or,op0,puntocoma}
E31 ->	op3 E4 E31		:{op3}
E31 ->  . 				:{pac,op2,and,or,op0,puntocoma}
E4 ->	menos E4		:{menos}
E4 ->	not E5			:{not}
E4 ->	E5 .			:{pap,var,numreal,pac,op3,op2,and,or,op0,puntocoma}
E5 ->	pap E0 pac		:{pap}
E5 ->	var 			:{var}
E5 ->	numreal 		:{numreal}
E5 ->	. 				:{pac,op3,op2,and,or,op0,puntocoma}


----------------------------------------------------------------------------------------------
Parte manual en java
----------------------------------------------------------------------------------------------

sp -> prog eof
PROGRAMA ->	DECLARACIONES separador INSTRUCCIONES. 			:{iden}
DECLARACIONES ->	DECLARACION R_DECLARACIONES . 			:{iden}
R_DECLARACIONES ->	puntocoma DECLARACION R_DECLARACIONES. 	:{puntocoma}
R_DECLARACIONES ->	. 										:{separador}
DECLARACION ->	iden var . 									:{iden}

INSTRUCCIONES ->	INSTRUCCION R_INSTRUCCIONES . 			:{var}
R_INSTRUCCIONES ->	puntocoma INSTRUCCION R_INSTRUCCIONES. 	:{puntocoma}
R_INSTRUCCIONES ->	. 										:{eof}
INSTRUCCION ->	var igual E0 . 								:{var}

E0 ->	E1 E01. 		:{and,or,op2,menos,not,op3,pap,var,numreal,op0,pac,puntocoma}

E01 ->	op0 E1 E01.		:{op0}
E01 ->  . 				:{pac,puntocoma}
E1 ->	E2 FE2. 		:{op2,menos,not,op3,pap,var,numreal,and,or,pac,op0,puntocoma}
FE2 ->	and E1. 		:{and}
FE2 ->  or E2.  		:{or}
FE2 ->  . 				:{pac,op0,puntocoma}
E2 ->	E3 FE3.			:{menos,not,op3,pap,var,numreal,op2,pac,and,or,op0,puntocoma}
FE3 ->	op2 E3. 		:{op2}
FE3 ->  .				:{pac,and,or,op0,puntocoma}
E3 ->	E4 E31 .		:{menos,not,pap,var,numreal,op3,pac,op2,and,or,op0,puntocoma}
E31 ->	op3 E4 E31		:{op3}
E31 ->  . 				:{pac,op2,and,or,op0,puntocoma}
E4 ->	menos E4		:{menos}
E4 ->	not E5			:{not}
E4 ->	E5 .			:{pap,var,numreal,pac,op3,op2,and,or,op0,puntocoma}

E5 ->	pap E0 pac		:{pap}
E5 ->	var 			:{var}
E5 ->	numreal 		:{numreal}
E5 ->	. 				:{pac,op3,op2,and,or,op0,puntocoma}