package asint;

import java_cup.runtime.*;
import alex.AnalizadorLexicoTiny;
import alex.UnidadLexica;
import errors.GestionErroresTiny;

scan with {: return getScanner().next_token(); :};
parser code {: 
   private GestionErroresTiny errores;
   public void syntax_error(Symbol unidadLexica) {
     errores.errorSintactico((UnidadLexica)unidadLexica);
   }
:};
init with {: 
   errores = new GestionErroresTiny();
   AnalizadorLexicoTiny alex = (AnalizadorLexicoTiny)getScanner();
   alex.fijaGestionErrores(errores);
:};

terminal      SUMA, RESTA, MUL, DIV, MENOR_QUE, MAYOR_QUE, MENOR_IGUAL_QUE, MAYOR_IGUAL_QUE,
              IGUAL, DISTINTO, PAPERTURA, PCIERRE, NUM, BOOL, SEP_ENTRADA, FIN_LINEA, 
	            VARIABLE, VALOR, AND, OR, NOT, IGUAL_IGUAL, IGNORABLE, TRUE, FALSE;

non terminal programa, declaraciones, declaracion, instrucciones, instruccion, E0, E1, E2, E3, E4, E5, OP0, OP2, OP3;

programa  ::= declaraciones SEP_ENTRADA instrucciones;
declaraciones  ::= declaraciones FIN_LINEA declaracion | declaracion;
declaracion ::= NUM VARIABLE | BOOL VARIABLE;
instrucciones ::= instrucciones FIN_LINEA instruccion | instruccion;
instruccion  ::= VARIABLE IGUAL E0;
E0 ::= E0 OP0 E1 | E1;
E1 ::= E2 AND E1 | E2 OR E2 | E2;
E2 ::= E3 OP2 E3 | E3;
E3 ::= E3 OP3 E4 | E4;
E4 ::= RESTA E4 | NOT E5 | E5;
E5 ::= PAPERTURA E0 PCIERRE | VARIABLE | VALOR;

OP0 ::= SUMA | RESTA;
OP2 ::= MENOR_QUE| MAYOR_QUE| MENOR_IGUAL_QUE| MAYOR_IGUAL_QUE| IGUAL_IGUAL| DISTINTO;
OP3 ::= MUL | DIV;
